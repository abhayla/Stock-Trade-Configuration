<UserControl x:Class="StockTradeStrategy.BuySellOnSignal.Views.BuySellSignalConfiguration"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converter="clr-namespace:StockTradeStrategy.BuySellOnSignal.Converters"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:StockTradeStrategy.BuySellOnSignal.Views"
             xmlns:vm="clr-namespace:StockTradeStrategy.BuySellOnSignal.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="700">
    <UserControl.DataContext>
        <vm:BuySellSignalConfigurationViewmodel></vm:BuySellSignalConfigurationViewmodel>
    </UserControl.DataContext>
    <UserControl.Resources>
        <converter:MaxProfitLossToText x:Key="MaxProfitLossToText"></converter:MaxProfitLossToText>
        <converter:ProfitLossToBackgroundConverter x:Key="ProfitLossToBackgroundConverter"></converter:ProfitLossToBackgroundConverter>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ScrollViewer HorizontalAlignment="Left" MinWidth="650" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <GroupBox HorizontalAlignment="Left"  Header="Buy Sell Signal Configuration">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="5"></Setter>
                            <Setter Property="Width" Value="120"></Setter>
                        </Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEditable" Value="True"></Setter>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Margin="3" Grid.Column="3" Grid.Row="1" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Reversal Config"></TextBlock>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ComboBox SelectedItem="{Binding Path=SelectedReversalConfig,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=ReversalConfigurations, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="0" DisplayMemberPath="Name"  Width="120"></ComboBox>
                            <Button x:Name="btnReverConfig" Margin="3,0" Content="Add/Edit Config" Click="btnReverConfig_Click" Grid.Column="1"></Button>
                        </Grid>
                    </Grid>
                    <Button Content="Add" Command="{Binding AddCommand}" Grid.Column="4" Grid.Row="2" Width="70" Height="27" HorizontalAlignment="Right"></Button>
                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <TextBlock Text="Exchange:"></TextBlock>
                        <ComboBox ItemsSource="{Binding Path=Exchanges, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="0" SelectedItem="{Binding Path=SelectedExchange, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Grid.Row="0">

                        <TextBlock Text="Symbol:"></TextBlock>
                        <ComboBox SelectedIndex="0" SelectedItem="{Binding Path=SelectedInstrument}" ItemsSource="{Binding Path=Instruments, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="2" Grid.Row="0">
                        <TextBlock Text="Lot Size:"></TextBlock>
                        <TextBox IsReadOnly="True" Text="{Binding Path=SelectedInstrument.LotSize, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="3" HorizontalAlignment="Left" Grid.Row="0">
                        <TextBlock Text="Local Symbol Name:"></TextBlock>
                        <TextBox Text="{Binding Path=MappedSymbolName, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                    <StackPanel Grid.Column="0" Grid.Row="1">
                        <TextBlock Text="Profit Tick:"></TextBlock>
                        <TextBox></TextBox>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Grid.Row="1">
                        <TextBlock Text="Max Profit:"></TextBlock>
                        <TextBox Text="{Binding Path=MaxProfit}"></TextBox>
                    </StackPanel>

                    <StackPanel Grid.Column="2" Grid.Row="1">
                        <TextBlock Text="Max Loss:"></TextBlock>
                        <TextBox Text="{Binding Path=MaxLoss}"></TextBox>
                    </StackPanel>

                    <StackPanel Grid.Column="0" Grid.Row="2">
                        <TextBlock Text="File Format:"></TextBlock>
                        <ComboBox ItemsSource="{Binding Path=FileFormats}" SelectedIndex="0" SelectedItem="{Binding Path=SelectedFileFormat, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                    </StackPanel>

                    <Grid Margin="5" HorizontalAlignment="Stretch" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Folder Path:"></TextBlock>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="txtFolderPath" Text="{Binding Path=FolderPath, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <Button x:Name="btnFolderPath" Click="txtFolderPath_Click" Grid.Column="1" Width="70" Content="Browse..."></Button>
                        </Grid>
                    </Grid>

                </Grid>
            </GroupBox>
        </ScrollViewer>
        <StackPanel Grid.Column="1" VerticalAlignment="Bottom">
            <Button Content="Save as Template" Margin="5" Click="Button_Click_1"></Button>
            <Button Content="Load from Template" Margin="5" Click="Button_Click_2"></Button>
        </StackPanel>
        <GroupBox Grid.ColumnSpan="2" Header="Configured Scrip" Grid.Row="1" Margin="5">
            <ScrollViewer  VerticalScrollBarVisibility="Auto">
                <ItemsControl Background="White" ItemsSource="{Binding Path=BuySellOnSignalSymbolConfigs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Margin="3" BorderThickness="10,0.5" BorderBrush="{Binding Path=CurrentProfitLoss, Converter={StaticResource ProfitLossToBackgroundConverter}}" Height="160"  Background="WhiteSmoke">
                                <StackPanel Margin="5">
                                    <TextBlock FontWeight="SemiBold" FontSize="14">
                                        <TextBlock.Inlines>
                                            <Run Text="{Binding Path=Exchange}" ></Run>
                                            <Run Text=":" ></Run>
                                            <Run Text="{Binding Path=Symbol}" ></Run>
                                            <Run Text=" (" ></Run>
                                            <Run Text="{Binding Path=MappedSymbolName}" FontStyle="Italic"  FontSize="12"></Run>
                                            <Run Text=")" ></Run>
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                    <StackPanel Margin="2" Orientation="Horizontal">
                                        <TextBlock Text="Max Profit : "></TextBlock>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="SemiBold" Text="{Binding Path=MaxProfit,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource MaxProfitLossToText}}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                        
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=MaxProfitEditMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                            </DataTrigger>
                                                        
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                        </TextBlock>
                                            <TextBox Width="45" Text="{Binding Path=MaxProfitEdit, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=MaxProfitEditMode, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                            <TextBlock Margin="2,0">
                                                <Hyperlink Command="{Binding Path=DataContext.MaxProfitEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}">
                                                    <TextBlock >
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                <Setter Property="Text" Value="Edit"></Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=MaxProfitEditMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                        <Setter Property="Text" Value="Save"></Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Margin="2" Orientation="Horizontal">
                                        <TextBlock Text="Max Loss : "></TextBlock>
                                            <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=MaxLoss,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource MaxProfitLossToText}}" FontWeight="SemiBold">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=MaxLossEditMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                                </DataTrigger>
                                                           
                                                        </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBox Width="45" Text="{Binding Path=MaxLossEdit, UpdateSourceTrigger=PropertyChanged}">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=MaxLossEditMode, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            <TextBlock Margin="2,0">
                                                <Hyperlink Command="{Binding Path=DataContext.MaxLossEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}">
                                                    <TextBlock >
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                <Setter Property="Text" Value="Edit"></Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=MaxLossEditMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                        <Setter Property="Text" Value="Save"></Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Hyperlink>
                                            </TextBlock>
                                            </StackPanel>
                                        
                                    </StackPanel>
                                    <StackPanel Margin="2" Orientation="Horizontal">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Status : "></TextBlock>
                                            <TextBlock Text="{Binding Path=Status}">
                                            </TextBlock>
                                        </StackPanel>
                                        <TextBlock Margin="5,0" Text="⁞" />
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Open Positions : "></TextBlock>
                                            <TextBlock Text="{Binding Path=OpenPosition}" Foreground="{Binding Path=OpenPosition, Converter={StaticResource ProfitLossToBackgroundConverter}}">
                                            </TextBlock>
                                        </StackPanel>
                                    </StackPanel>
                                    
                                    <StackPanel Margin="2" Orientation="Horizontal">
                                        <TextBlock Text="Current Profit/Loss: "></TextBlock>
                                        <TextBlock Text="{Binding Path=CurrentProfitLoss, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Path=CurrentProfitLoss, Converter={StaticResource ProfitLossToBackgroundConverter}}">
                                        </TextBlock>
                                    </StackPanel>
                                    <ProgressBar Minimum="{Binding Path=Min}" Maximum="{Binding Path=Max}" Value="{Binding AbsoluteProfitLoss, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Path=CurrentProfitLoss, Converter={StaticResource ProfitLossToBackgroundConverter}}" Height="25">
                                        <ProgressBar.Style>
                                            <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Status, UpdateSourceTrigger=PropertyChanged}" Value="Running">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ProgressBar.Style>
                                    </ProgressBar>

                                    <StackPanel Margin="2" Orientation="Horizontal">
                                    <Button Margin="2" Width="70" Command="{Binding DataContext.StartCommand,RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}" CommandParameter="{Binding}" HorizontalAlignment="Left" >
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="Content" Value="Start"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Status}" Value="Running">
                                                        <Setter Property="Content" Value="Stop"></Setter>
                                                    </DataTrigger>
                                                    
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                        <Button Margin="2" Width="70"  x:Name="btnSqureOff" CommandParameter="{Binding}" Command="{Binding Path=DataContext.SquareOffCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Content="Square Off">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=OpenPosition, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Margin="2" Width="70" Click="Button_Click" Content="Delete">
                                        
                                    </Button>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </GroupBox>
    </Grid>
</UserControl>
